/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

* { /* this is a universal selector */
    margin: 0;
    padding: 0;
    box-sizing: border-box;

}

body { /* body element selector, everything related to fonts to be put here*/
    font-family: "Lato", sans-serif;
    font-weight: 400;
    font-size: 16px;
    line-height: 1.7; /* = font size multiplied by this number */
    color: #777;/* color of the fonts */
    padding: 30px /* the while padding around all elements in the body */
}

.header { /* this is a class selector, which is defined in the html */
    height: 95vh; /* this class will have 95% of the viewport height */
    background-image: linear-gradient(
        to right bottom,
        rgba(126, 213, 111, 0.8),
        rgba(40, 180, 133, 0.8)),

        url(../img/hero.jpg); /* dot dot .. to go up one level from the current css file */
    background-size: cover; /* the viewport will always try to fit the img inside the box (to read more) */ 
    background-position: top; /*the top of the background img will stay the same */
    position: relative; /*do this so the parent header to become the reference to the logo-box*/
    clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
}

.logo-box {  /*class selector */
    position: absolute;
    top: 40px;
    left: 40px; /* counting from the parent element, in this case, the header */

}

.logo {
    height: 35px; /*not setting the width mean the width will auto scale*/
}

.logo-box:hover {
    animation: moveInRight 5s ease-out;
}

.text-box{
    position: absolute;
    top: 40%;
    left:50%;
    transform: translate(-50%, -50%);
    text-align: center;
}

.heading-primary {
    color: #fff;
    text-transform: uppercase;
    backface-visibility: hidden; /*add this so that the letter not shaking at the end of animation */
}

.heading-primary-main{
    display: block;
    font-size: 60px;
    font-weight: 400;
    letter-spacing: 35px;
    animation-name: moveInLeft;
    animation-duration: 1s;
    animation-timing-function: ease-out;
}

.heading-primary-sub{
    display: block;
    font-size: 20px;
    font-weight: 700;
    letter-spacing: 17.4px;
    animation: moveInRight 1s ease-out; /* group together 3 animation property into 1 line */
    margin-bottom: 60px;
}

@keyframes moveInLeft {
    0% {
        opacity: 0;
        transform: translateX(-100px);
    }
    70% {
        transform: translateX(10px);
     
    }    
    100% {
        opacity: 1;
        transform: translate(0);
    }
}

@keyframes moveInRight {
    0%{
        opacity: 0;
        transform: translateX(100px);
    }
    70%{
        transform: translateX(-10px);
    }
    100%{
        opacity: 1;
        transform: translate(0);
    }    
}

@keyframes moveInTop {
    0%{
        opacity: 0;
        transform: translateY(40px);        
    }
    100%{
        opacity: 1;
        transform: translateY(0);
    }
    
}

.btn:link,/*this a link psuedo class, i.e. link is a state of the button selector*/
.btn:visited { /*if we don't style the visited state, the button color will change after clicking (which we don't want)*/
    text-transform: uppercase;
    text-decoration: none; /*remove the blue, underscored appearance for link */
    padding: 15px 40px; /* 15px for top and bot, 40px for left & right*/
    display: inline-block;
    border-radius: 100px;
    transition: all 0.2s; /*for animation of the button, has to be in the initial state*/
    position: relative;
}

.btn:hover {
    transform: translateY(-3px);
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
}

.btn:active  { /*when clicked*/
    transform: translateY(-1px);
    box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);
}

.btn-white {
    background-color: #fff;
    color: #777;
}

.btn::after{ /* this is the after pseudo-element, which will show up after the button */
    content: ""; /* empty content  but still need to specify it, otherwise not gonna work*/
    display: inline-block;
    height: 100%;
    width: 100%;
    border-radius: 100px;
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    transition: all 0.4s;
}

.btn-white::after{
    background-color: #fff;
}

.btn:hover::after{
    transform: scaleX(1.5) scaleY(1.8);
    opacity: 0;
}

.btn-animated{
    animation: moveInTop 1s ease-out 0.5s; /*delay 0.5s*/
    animation-fill-mode: backwards; /* use this when there is a delay so that the opacity when 0% is applied first*/
}


/* css state : vs css psuedo-element ::